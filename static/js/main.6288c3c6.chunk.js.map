{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/layout/Footer.js","components/store/containers/Footer.js","components/store/actions/changeThemeAction.js","components/TodoApp.js","components/store/reducers/themeReducer.js","components/store/reducers/index.js","index.js"],"names":["Header","className","React","Component","TodoItem","this","props","todo","completed","id","title","type","checked","onChange","handleChange","onClick","handeleDelete","Todos","todos","map","AddTodo","useState","setTitle","onSubmit","e","preventDefault","handelAddTodo","placeholder","value","target","Footer","submitThemeColor","bind","color","console","log","saveColorTheme","nextprops","JSON","stringify","document","documentElement","style","setProperty","themeColor","onclick","connect","state","dispatch","payload","saveTheme","TodoApp","setState","useEffect","axios","get","params","_limit","then","reponse","data","newTodo","uuid","v4","delete","filter","iniitState","combineReducers","action","Object","assign","store","createStore","rootReducer","el","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6288c3c6.chunk.js","sourcesContent":["import React from \"react\" ; \r\n\r\nclass Header extends React.Component {\r\n    render(){\r\n        return (\r\n            <header className=\"header-container\">\r\n                <h1 className=\"header-title\">Simple Todo app</h1>\r\n            </header>\r\n        ) ; \r\n    }\r\n} ; \r\n\r\nexport default Header ; ","import React from \"react\" ; \r\nclass TodoItem extends React.Component {\r\n    render(){\r\n        const { completed , id, title} = this.props.todo   ; \r\n\r\n        return (\r\n            <li className=\"todo-item\">\r\n                <input \r\n                    type=\"checkbox\" \r\n                    checked={completed}\r\n                    onChange={() => this.props.handleChange(id)} />\r\n                \r\n                <span className={completed ? \"completed\": null}>\r\n                    {title} \r\n                </span>\r\n                <button className=\"btn-style\" onClick={() => this.props.handeleDelete(id)}>X</button>\r\n            </li>\r\n        ) ;\r\n    }\r\n}\r\nexport default TodoItem ; ","import React from \"react\" ; \r\nimport TodoItem from \"./TodoItem\" ; \r\n\r\nclass Todos extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <ul>\r\n                    {this.props.todos.map(todo => (\r\n                        <TodoItem \r\n                            key={todo.id} todo={todo}  \r\n                            handleChange={ this.props.handleChange} \r\n                            handeleDelete={this.props.handeleDelete}/>\r\n                 \r\n                    ))}\r\n                </ul>                \r\n            </div>\r\n        ) ; \r\n    }\r\n}\r\nexport default Todos  ; \r\n\r\n","import React, { useState } from \"react\" ; \r\n\r\nfunction AddTodo (props){\r\n    const [title, setTitle] = useState(\"\") ; \r\n\r\n    const onInputChange = e => {\r\n        setTitle(e.target.value); \r\n\r\n    } ; \r\n    const addTodo = e => {\r\n        e.preventDefault() ; \r\n        props.handelAddTodo(title); \r\n        setTitle(\"\"); \r\n    }; \r\n    return (\r\n        <form className=\"form-container\" onSubmit={addTodo} >\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Add Todo ... \" \r\n                className=\"input-text\"\r\n                value={title}\r\n                onChange={onInputChange}/>\r\n            <input type=\"submit\" value=\"submit\" className=\"input-submit\" />\r\n        \r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default AddTodo ; \r\n","import React from 'react' ; \r\nconst RED  = \"#f00\" ; \r\nconst BLUE = \"#00f\" ; \r\nconst GRAY = \"#768c89\" ; \r\n\r\nclass Footer extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.submitThemeColor = this.submitThemeColor.bind(this) \r\n    }\r\n    submitThemeColor(color){\r\n        if( color){\r\n            console.log(\"handleChangeTheme\") ; \r\n            this.props.saveColorTheme(color) ; \r\n        }\r\n    }\r\n    componentWillReceiveProps(nextprops){\r\n        console.log('UNSAFE_componentWillReceiveProps: ' +JSON.stringify(nextprops)) ; \r\n        document.documentElement.style.setProperty(\"--main-color\", nextprops.themeColor.color);\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"footer\">\r\n                <div className=\"vertical-center\">\r\n                    <span>Choose theme</span>\r\n                    <button onClick={ () => this.submitThemeColor(RED)} className=\"dot red\"></button>\r\n                    <button onClick={() => this.submitThemeColor(BLUE)} className=\"dot blue\" ></button>\r\n                    <button onclick={() => this.submitThemeColor(GRAY)} className=\"dot gray\" ></button>\r\n                </div>\r\n            </div>\r\n        ); \r\n    }\r\n}; \r\n\r\nexport default Footer ; ","import { connect } from \"react-redux\";\r\nimport { saveTheme } from \"../actions/changeThemeAction\";\r\nimport Footer from \"../../layout/Footer\";\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatch,\r\n    saveColorTheme: color => dispatch(saveTheme(color)) ,\r\n}) ; \r\n\r\nfunction mapStateToProps( state){\r\n    return {\r\n        themeColor: state.color \r\n    }; \r\n};\r\n\r\nexport default connect (\r\n    mapStateToProps ,\r\n    mapDispatchToProps\r\n)(Footer) ; ","export const saveTheme = color => ({\r\n    type: \"CHANGE_THEME\",\r\n    payload: {\r\n        color\r\n    }\r\n}) ; ","import React, {useState, useEffect} from \"react\" ;\r\nimport  Header from \"../components/layout/Header\"\r\nimport Todos from \"./Todos\" ; \r\nimport AddTodo from \"./AddTodo\" ; \r\nimport Footer from \"../components/store/containers/Footer\"\r\nimport axios from \"axios\" ; \r\nimport {v4 as uuid}  from \"uuid\" ; \r\n\r\n\r\n\r\nfunction TodoApp(){\r\n\r\n\r\n    const [ state , setState] = useState({\r\n        todos: []\r\n    }); \r\n    const  handleChangeCheckbox = id => {\r\n        console.log(\"clicked todoapp\" + id) ; \r\n        setState({\r\n            todos: state.todos.map(todo => {\r\n                if(todo.id === id) {\r\n                    todo.completed = !todo.completed ; \r\n                }\r\n                return todo; \r\n            })\r\n        }); \r\n    }; \r\n    const handeleDelete = id => {\r\n        axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n            .then(reponse => setState({\r\n                todos: [\r\n                    ...state.todos.filter(todo => {\r\n                        return todo.id !== id; \r\n                    })\r\n                ]\r\n            }))\r\n        // setState({\r\n        //     todos: [\r\n        //         ...state.todos.filter(todo => {\r\n        //             return todo.id != id ; \r\n        //         }) \r\n        //     ]\r\n        // });\r\n    };\r\n    \r\n    const handelAddTodo = title => {\r\n        const newTodo = {\r\n            id: uuid.v4,\r\n            title: title,\r\n            completed: false \r\n        }; \r\n        // axios.post(\"https://jsonplaceholder.typicode.com/todos\" , newTodo)\r\n        //     .then(respone => {\r\n        //         console.log(respone.data)\r\n        //         setState({\r\n        //             todos: [...state.todos, respone.data]\r\n        //         })\r\n        //     }) ; \r\n        setState({\r\n            todos: [...state.todos, newTodo]\r\n        }); \r\n\r\n        console.log(\"choaf \") ; \r\n    }\r\n    useEffect(() => {\r\n        const config = {\r\n            params: {\r\n                _limit: 5\r\n            }\r\n        }\r\n        axios.get(\"https://jsonplaceholder.typicode.com/todos\" , config)\r\n            .then(reponse => setState({ todos: reponse.data})) ;    \r\n     }) ; \r\n    return (\r\n        <div className=\"container\">\r\n            <Header/>\r\n            <AddTodo handelAddTodo={handelAddTodo}/>\r\n            <Todos \r\n                todos={state.todos} \r\n                handleChange={handleChangeCheckbox}\r\n                handeleDelete={handeleDelete}/>\r\n\r\n            <Footer/>\r\n          \r\n        </div>\r\n    ) ; \r\n}\r\n\r\nexport default TodoApp ; \r\n\r\n","let iniitState = {\r\n    color: \"#fff\" \r\n}; \r\n\r\nexport default function themeReducer(state = iniitState , action){\r\n    switch(action.type){\r\n        case \"CHANGE_THEME\":\r\n            console.log('themeReducer: ' + JSON.stringify(state)) \r\n            return Object.assign({}, state, {\r\n                color: action.payload.color\r\n            }) ; \r\n            default :\r\n                return iniitState ; \r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport color from \"./themeReducer\" ; \r\n\r\nexport default combineReducers({\r\n    color\r\n}) ; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoApp from './components/TodoApp';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './components/store/reducers'\n\nimport \"./App.css\"; \n\nconst store = createStore( rootReducer) ; \n\nconst el = <h2>Chào mừng bạn đến với react</h2> ; \n\n\n\nReactDOM.render(el, document.getElementById(\"root\")) ; \n\nReactDOM.render(\n    <Provider store={store}>\n        <TodoApp /> \n    </Provider>\n    , document.getElementById(\"root\")) ; "],"sourceRoot":""}